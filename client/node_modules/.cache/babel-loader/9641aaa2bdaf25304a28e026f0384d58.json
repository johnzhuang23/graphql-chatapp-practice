{"ast":null,"code":"var _jsxFileName = \"/Users/zz/sei/pratice/chatapp/client/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { ApolloClient, InMemoryCache, useMutation, useSubscription, gql } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { Container, Chip, Grid, TextField, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst link = new WebSocketLink({\n  uri: `ws://localhost:4000/`,\n  options: {\n    reconnect: true\n  }\n});\nconst GET_MESSAGES = gql`\n  subscription {\n    messages {\n      id\n      user\n      text\n    }\n  }\n`;\n\nconst Messages = () => {\n  _s();\n\n  const {\n    data\n  } = useSubscription(GET_MESSAGES);\n\n  if (!data) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '5rem'\n    },\n    children: data.messages.map(_ref => {\n      let {\n        id,\n        user,\n        text\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '0.3rem'\n          },\n          children: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          style: {\n            fontSize: '0.9rem'\n          },\n          color: \"primary\",\n          label: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Messages, \"5LK+53Oia6K8c0VFEgmT72QLLdU=\", false, function () {\n  return [useSubscription];\n});\n\n_c = Messages;\nexport const client = new ApolloClient({\n  link,\n  //websocket link\n  uri: 'http://localhost:4000/',\n  //connect to server\n  cache: new InMemoryCache()\n});\nexport const Chat = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Let's talk!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"sources":["/Users/zz/sei/pratice/chatapp/client/src/Chat.js"],"names":["ApolloClient","InMemoryCache","useMutation","useSubscription","gql","WebSocketLink","Container","Chip","Grid","TextField","Button","link","uri","options","reconnect","GET_MESSAGES","Messages","data","marginBottom","messages","map","id","user","text","textAlign","fontSize","client","cache","Chat"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,eAAnD,EAAoEC,GAApE,QAA+E,gBAA/E;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CC,MAA3C,QAAyD,mBAAzD;;AAGA,MAAMC,IAAI,GAAG,IAAIN,aAAJ,CAAkB;AAC3BO,EAAAA,GAAG,EAAG,sBADqB;AAE3BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN;AAFkB,CAAlB,CAAb;AAQA,MAAMC,YAAY,GAAGX,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMY,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWd,eAAe,CAACY,YAAD,CAAhC;;AACA,MAAI,CAACE,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AACD,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA,cACKD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,QAAwB;AAAA,UAAvB;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAuB;AACvC,0BACI;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAArB;AAAA,gCACI;AAAG,UAAA,KAAK,EAAE;AAAEN,YAAAA,YAAY,EAAE;AAAhB,WAAV;AAAA,oBAAuCI;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEG,YAAAA,QAAQ,EAAE;AAAZ,WAAb;AAAqC,UAAA,KAAK,EAAC,SAA3C;AAAqD,UAAA,KAAK,EAAEF;AAA5D;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUF,EAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjBD;;GAAML,Q;UACeb,e;;;KADfa,Q;AAqBN,OAAO,MAAMU,MAAM,GAAG,IAAI1B,YAAJ,CAAiB;AACnCW,EAAAA,IADmC;AAC7B;AACNC,EAAAA,GAAG,EAAE,wBAF8B;AAEJ;AAC/Be,EAAAA,KAAK,EAAE,IAAI1B,aAAJ;AAH4B,CAAjB,CAAf;AAOP,OAAO,MAAM2B,IAAI,GAAG,MAAM;AACtB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPM;MAAMA,I","sourcesContent":["import { ApolloClient, InMemoryCache, useMutation, useSubscription, gql } from '@apollo/client';\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { Container, Chip, Grid, TextField, Button } from '@material-ui/core';\n\n\nconst link = new WebSocketLink({\n    uri: `ws://localhost:4000/`,\n    options: {\n        reconnect: true,\n    },\n});\n\n\nconst GET_MESSAGES = gql`\n  subscription {\n    messages {\n      id\n      user\n      text\n    }\n  }\n`;\n\nconst Messages = () => {\n    const { data } = useSubscription(GET_MESSAGES);\n    if (!data) {\n        return null;\n    }\n    return (\n        <div style={{ marginBottom: '5rem' }}>\n            {data.messages.map(({ id, user, text }) => {\n                return (\n                    <div key={id} style={{ textAlign: 'right' }}>\n                        <p style={{ marginBottom: '0.3rem' }}>{user}</p>\n                        <Chip style={{ fontSize: '0.9rem' }} color='primary' label={text} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\n\n\nexport const client = new ApolloClient({\n    link, //websocket link\n    uri: 'http://localhost:4000/', //connect to server\n    cache: new InMemoryCache(),\n});\n\n\nexport const Chat = () => {\n    return (\n        <div>\n            <h3>Let's talk!</h3>\n            <Messages />\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}