{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MessageTypes = function () {\n  function MessageTypes() {\n    throw new Error('Static Class');\n  }\n\n  MessageTypes.GQL_CONNECTION_INIT = 'connection_init';\n  MessageTypes.GQL_CONNECTION_ACK = 'connection_ack';\n  MessageTypes.GQL_CONNECTION_ERROR = 'connection_error';\n  MessageTypes.GQL_CONNECTION_KEEP_ALIVE = 'ka';\n  MessageTypes.GQL_CONNECTION_TERMINATE = 'connection_terminate';\n  MessageTypes.GQL_START = 'start';\n  MessageTypes.GQL_DATA = 'data';\n  MessageTypes.GQL_ERROR = 'error';\n  MessageTypes.GQL_COMPLETE = 'complete';\n  MessageTypes.GQL_STOP = 'stop';\n  MessageTypes.SUBSCRIPTION_START = 'subscription_start';\n  MessageTypes.SUBSCRIPTION_DATA = 'subscription_data';\n  MessageTypes.SUBSCRIPTION_SUCCESS = 'subscription_success';\n  MessageTypes.SUBSCRIPTION_FAIL = 'subscription_fail';\n  MessageTypes.SUBSCRIPTION_END = 'subscription_end';\n  MessageTypes.INIT = 'init';\n  MessageTypes.INIT_SUCCESS = 'init_success';\n  MessageTypes.INIT_FAIL = 'init_fail';\n  MessageTypes.KEEP_ALIVE = 'keepalive';\n  return MessageTypes;\n}();\n\nexports.default = MessageTypes;","map":{"version":3,"mappings":";;;;;;AAAA;AAqDE;AACE,UAAM,IAAIA,KAAJ,CAAU,cAAV,CAAN;AACD;;AAtDaC,qCAAsB,iBAAtB;AACAA,oCAAqB,gBAArB;AACAA,sCAAuB,kBAAvB;AAGAA,2CAA4B,IAA5B;AAEAA,0CAA2B,sBAA3B;AACAA,2BAAY,OAAZ;AACAA,0BAAW,MAAX;AACAA,2BAAY,OAAZ;AACAA,8BAAe,UAAf;AACAA,0BAAW,MAAX;AAMAA,oCAAqB,oBAArB;AAIAA,mCAAoB,mBAApB;AAIAA,sCAAuB,sBAAvB;AAIAA,mCAAoB,mBAApB;AAIAA,kCAAmB,kBAAnB;AAIAA,sBAAO,MAAP;AAIAA,8BAAe,cAAf;AAIAA,2BAAY,WAAZ;AAIAA,4BAAa,WAAb;AAKhB;AAxDA;;kBAAqBA","names":["Error","MessageTypes"],"sources":["/Users/zz/sei/pratice/graphql-chat/client/node_modules/subscriptions-transport-ws/src/message-types.ts"],"sourcesContent":["export default class MessageTypes {\n  public static GQL_CONNECTION_INIT = 'connection_init'; // Client -> Server\n  public static GQL_CONNECTION_ACK = 'connection_ack'; // Server -> Client\n  public static GQL_CONNECTION_ERROR = 'connection_error'; // Server -> Client\n\n  // NOTE: The keep alive message type does not follow the standard due to connection optimizations\n  public static GQL_CONNECTION_KEEP_ALIVE = 'ka'; // Server -> Client\n\n  public static GQL_CONNECTION_TERMINATE = 'connection_terminate'; // Client -> Server\n  public static GQL_START = 'start'; // Client -> Server\n  public static GQL_DATA = 'data'; // Server -> Client\n  public static GQL_ERROR = 'error'; // Server -> Client\n  public static GQL_COMPLETE = 'complete'; // Server -> Client\n  public static GQL_STOP = 'stop'; // Client -> Server\n\n  // NOTE: The following message types are deprecated and will be removed soon.\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_START = 'subscription_start';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_DATA = 'subscription_data';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_SUCCESS = 'subscription_success';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_FAIL = 'subscription_fail';\n  /**\n   * @deprecated\n   */\n  public static SUBSCRIPTION_END = 'subscription_end';\n  /**\n   * @deprecated\n   */\n  public static INIT = 'init';\n  /**\n   * @deprecated\n   */\n  public static INIT_SUCCESS = 'init_success';\n  /**\n   * @deprecated\n   */\n  public static INIT_FAIL = 'init_fail';\n  /**\n   * @deprecated\n   */\n  public static KEEP_ALIVE = 'keepalive';\n\n  constructor() {\n    throw new Error('Static Class');\n  }\n}\n"]},"metadata":{},"sourceType":"script"}